#pragma once
#include"ljjz.h"
#include<graphics.h>
#include<conio.h>

/*弗洛伊德―所有顶点对最短路径算法*/
typedef int dist[M][M];/*距离向量类型*/
typedef int path[M][M];/*路径向量类型*/


/****************************************************/
/*	函数功能：Floyed方法求所有顶点对之间最短路径	*/
/*	函数参数：邻接矩阵g，距离向量d,路径向量p		*/
/*	递推公式：										*/
/*	A-1[i][j]=g.edges[i][j]							*/
/*	Ak+1[i][j]=min{Ak[i][j],Ak[i][k+1]+Ak[k+1][j]}	*/
/*	函数返回值：无									*/
/****************************************************/
void floyd(Mgraph g, dist d, path p);


/************************************************************/
/*	函数功能：Floyed方法最短路径单景点对输出				*/
/*	函数参数：邻接矩阵g，路径向量p,两地标序号i,j			*/
/*	算法思想：递归											*/
/*	函数返回值：无											*/
/************************************************************/
void floydoutput(Mgraph g, path p, int i, int j);


/************************************************************/
/*	函数功能：Floyed最短路径接口函数						*/
/*	函数参数：邻接矩阵g，距离向量d,路径向量p,两地标序号v1,v2*/
/*	函数返回值：无											*/
/************************************************************/
void floydprint(Mgraph g, dist d, path p, int v1, int v2);